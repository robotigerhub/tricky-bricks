local c = require("modules.common")

function init(self)
	self.counter = 0
end

local function get_rand_position()
	local x = math.random(c.SUPPORT_X_MIN, c.SUPPORT_X_MAX)*c.TILE_SIZE
	if math.random() < 0.5 then
		x = -x
	end
	local y_tile_min = go.get_position("/raycaster").y / c.TILE_SIZE
	local y_tile_max = go.get_position("/deadline").y / c.TILE_SIZE - 1
	local y = math.random(y_tile_min, y_tile_max) * c.TILE_SIZE
	return vmath.vector3(x, y, 0)
end

local function spawn_support()
	local position
	repeat
		position = get_rand_position()
		local from = position + vmath.vector3(0, 10, 0)
		local to = position
		local taken = physics.raycast(from, to, {hash("support"), hash("block-put")}, {all=false})
	until not taken
	factory.create("#factory", position)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("spawn_supports") then
		timer.delay(0.1, true, function(self, handle, time_elapsed)
			spawn_support()
			self.counter = self.counter + 1
			if self.counter == c.SUPPORT_COUNT then
				msg.post("/main#script", "supports_spawned")
				self.counter = 0
				timer.cancel(handle)
			end
		end)
	end
end