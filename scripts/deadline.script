local countdown, continue_countdown

function init(self)
	self.cd = coroutine.create(countdown)
end

function countdown(self)
	coroutine.yield(3)
	coroutine.yield(2)
	return 1
end

function on_message(self, message_id, message, sender)
	if message_id == hash("trigger_response") then
		msg.post("/blockspawner#script", "stop_spawning")
		_, time = coroutine.resume(self.cd, self)
		print(time)
		timer.delay(1, true, continue_countdown)
	elseif message_id == hash("move_up") then
		local new_position = go.get_position() + vmath.vector3(0, 50, 0)
		go.animate(
			".", "position", go.PLAYBACK_ONCE_FORWARD,
			new_position, go.EASING_INOUTQUAD, 0.5, 0, function(self, url, property)
				msg.post("/main#script", "deadline_moved")
			end
			)
	end
end

function continue_countdown(self, handle, time_elapsed)
	local status, time = coroutine.resume(self.cd, self)
	if status then
		print(time)
	else
		msg.post("/main#script", "show_game_over")
		timer.cancel(handle)
	end
end