local LEVEL_STEP = 2

local blocks_to_spawn = 6
local last_level = blocks_to_spawn
local total_block_count = 0

local after_block_put, update_gui, post_spawn_message, switch_level

function init(self)
	math.randomseed(os.time())
	math.random();math.random();math.random();  -- discard first few random numbers
	msg.post("/basespawner#script", "spawn_base")
	msg.post("/blockspawner#script", "spawn_block")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("block_spawned") then
		blocks_to_spawn = blocks_to_spawn - 1
		update_gui()
	elseif message_id == hash("block_put") then
		total_block_count = total_block_count + 1
		after_block_put()
	elseif message_id == hash("block_lost") then
		total_block_count = total_block_count - 1
	elseif message_id == hash("block_saved") then
		total_block_count = total_block_count + 1
	elseif message_id == hash("show_game_over") then
		print("YOUR SCORE:", total_block_count)
	elseif message_id == hash("current_block_removed") then
		after_block_put()
	elseif message_id == hash("deadline_moved") then
		msg.post("/blockspawner#script", "move_up")
		msg.post("/supportspawner#script", "spawn_supports")
		msg.post("/blockspawner#script", "spawn_block")
	end
end

function after_block_put()
	if blocks_to_spawn == 0 then
		switch_level()
	else
		msg.post("/blockspawner#script", "spawn_block")
	end
end

function update_gui()
	do end
end

function switch_level()
	blocks_to_spawn = last_level + LEVEL_STEP
	last_level = blocks_to_spawn
	msg.post("/deadline#script", "move_up")
end