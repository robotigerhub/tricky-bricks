function init(self)
	msg.post(".", "acquire_input_focus")
end

local function update_score(score)
	local node = gui.get_node("score")
	local text = "SCORE: " .. score
	gui.set_text(node, text)
end

local function update_count(count)
	local node = gui.get_node("count")
	local text = tostring(count)
	gui.set_text(node, text)
end

local function update_block(block)
	local node = gui.get_node("block")
	gui.play_flipbook(node, "block_" .. block)
end

local function play_power()
	local node = gui.get_node("power")
	gui.play_particlefx(node)
end

local function stop_power()
	local node = gui.get_node("power")
	gui.stop_particlefx(node)
end

local function enable_end()
	local node = gui.get_node("end")
	gui.set_enabled(node, true)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("update_score") then
		update_score(message.score)
	elseif message_id == hash("update_count") then
		update_count(message.count)
	elseif message_id == hash("update_block") then
		update_block(message.block)
	elseif message_id == hash("enable_power") then
		play_power()
	elseif message_id == hash("disable_power") then
		stop_power()
	elseif message_id == hash("show_end") then
		enable_end()
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		local node = gui.get_node("button")
		if gui.is_enabled(node, true) and gui.pick_node(node, action.x, action.y) then
			msg.post("main:/loader#script", "restart_game")
		end
	end
end